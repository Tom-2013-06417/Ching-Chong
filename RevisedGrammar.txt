Start -> Initialize
Initialize -> Hi,Iam Name . \n GlobalVarDec
GlobalVarDec -> ISendShrimpFriedRiceToAll: \n Declare ManyDeclare Sincerely, Name . \n ManyFunction
GlobalVarDec -> ManyFunction
ManyFunction -> Function ManyFunction
ManyFunction -> ''
Function -> Dear Name , \n ParameterSegment VarDecSegment FunctionStatement Sincerely, Name . \n
ParameterSegment -> IWantDumplingsAnd: \n Declare ManyDeclare okaylah. \n
ParameterSegment -> ''
VarDecSegment -> FatherSaysINeed: \n Declare ManyDeclare ToBecomeDoctorlah. \n
VarDecSegment -> ''
ManyDeclare -> Declare ManyDeclare
ManyDeclare -> ''
Declare -> IntDeclare
IntDeclare -> Score Var IntVal IntMore 
IntVal -> of Int 
IntVal -> ''
IntMore -> , Var IntVal IntMore2
IntMore -> lah. \n
IntMore2 -> IntMore
IntMore2 -> ''
Declare -> FltDeclare
FltDeclare -> GWA Var FltVal FltMore
FltVal -> of Float 
FltVal -> ''
FltMore -> , Var FltVal FltMore2
FltMore -> lah. \n
FltMore2 -> FltMore
FltMore2 -> ''
Declare -> ChrDeclare
ChrDeclare -> LetterGrade Var ChrVal ChrMore 
ChrVal -> of Char 
ChrVal -> ''
ChrMore -> , Var ChrVal ChrMore2
ChrMore -> lah. \n
ChrMore2 -> ChrMore
ChrMore2 -> ''
Declare -> StrDeclare
StrDeclare -> Essay Var StrVal StrMore 
StrVal -> of Str 
StrVal -> ''
StrMore -> , Var StrVal StrMore2
StrMore -> lah. \n
StrMore2 -> StrMore
StrMore2 -> ''
Declare -> BlnDeclare
BlnDeclare -> Honor Var BlnVal BlnMore 
BlnVal -> of Boolean 
BlnVal -> ''
BlnMore -> , Var BlnVal BlnMore2
BlnMore -> lah. \n
BlnMore2 -> BlnMore
BlnMore2 -> ''
Declare -> ListDeclare
ListDeclare -> ReportCard Var ListVal
ListVal -> with Int entries lah. \n
ListVal -> with Var
ListMore -> , Var ListMore2
ListMore -> lah. \n
ListMore2 -> ListMore
ListMore2 -> ''
FunctionStatement -> Statement FunctionStatement
FunctionStatement -> Return FunctionStatement
FunctionStatement -> ''
Return -> IGiveYouSum Var lah. \n
Statement -> FunctionCall 
FunctionCall -> IWriteTo Name FxnCallParameter
FxnCallParameter -> With Var ManyVar FxnCallReturn
FxnCallParameter -> FxnCallReturn
FxnCallReturn -> lah. \n IGet Var From Name lah. \n
FxnCallReturn -> lah. \n 
ManyVar -> , Var ManyVar
ManyVar -> ''
Statement -> For
For -> FatherSayMakeRepeat Label againlah. \n MustDo Var from Var to Var oclocklah. \n ControlStructureStatement I'mDoneWith Label lah. \n
Statement -> While
While -> FatherSayMakeRepeat Label againlah. \n MustDo Label while Conditional lah. \n ControlStructureStatement I'mDoneWith Label lah. \n
Statement -> If
If   -> FatherAsk Label , if Conditional lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
If   -> FatherAsk Label , is Var Boolean lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
If   -> FatherAsk Label , if Boolean lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
Elif ->	FatherAskAgain Label , if Conditional lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
Elif ->	FatherAskAgain Label , is Var lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
Elif ->	FatherAskAgain Label , if Boolean lah. \n ControlStructureStatement Idoubleconfirm Label , lah. \n Elif
Elif -> Else
Else -> FatherStopAsking Label lah. \n ControlStructureStatement FatherAshamedofSonForNotAnswer Label , lah. \n
Else -> ''
Conditional -> Expr moreLesserTo Expr
Conditional -> Expr lesserTo Expr 
Conditional -> Expr moreGreatererTo Expr 
Conditional -> Expr greatererTo Expr 
Conditional -> Expr sameTo Expr 
Conditional -> Expr notSameTo Expr
ControlStructureStatement -> Statement ControlStructureStatement
ControlStructureStatement -> Break ControlStructureStatement
ControlStructureStatement -> Continue ControlStructureStatement
ControlStructureStatement -> ''
Break -> I'mTiredlah. \n
Continue -> FatherBroughtOutBeltlah. \n
Statement -> Print
Print -> IShowFather Var lah. \n
Statement -> InputPrompt
InputPrompt -> FatherWants Str , Input
InputPrompt -> Input
Input -> IGiveFather Var lah. \n
Statement -> Arith
Arith -> FatherSurpriseQuiz: Math lah. \n
Arith -> FatherSurpriseLongQ: \n Math lah. LQ
LQ -> Math lah. \n LQ
LQ -> Ididnotknowlah. \n
Math -> Var = Expr
Expr -> Expr + Term
Expr -> Expr - Term
Expr -> Term
Term -> Term * Ex
Term -> Term / Ex
Term -> Term % Ex
Term -> Ex
Ex -> Ex ** Factor
Ex -> Factor
Factor -> ( Expr )
Factor -> Var
Factor -> Int
Boolean -> Own
Boolean -> Disown 
Float ->  Int . Int
Int -> Digit Int'
Int' -> Int
Int' -> ''
Digit -> 0
Digit -> 1
Var -> BL Str2
Label -> BL MoreLabel
MoreLabel -> Label
MoreLabel -> ''
Name -> BL NamePrime
NamePrime -> SL NamePrimePrime
NamePrime -> BL NamePrimePrime
NamePrimePrime -> NamePrime
NamePrimePrime -> ''
Str -> Char Str2
Str2 -> Str
Str2 -> ''
Char -> BL
Char -> SL
Char -> CD
BL -> A
BL -> B
BL -> C
SL -> a
SL -> b
SL -> c
CD -> "0"
CD -> "1" 
CD -> "2"